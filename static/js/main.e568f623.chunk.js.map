{"version":3,"sources":["components/Profile/Profile.styled.js","components/Profile/Profile.jsx","components/Statistics/Statistics.styled.js","components/Statistics/Statistics.jsx","components/FriendList/FriendList.styled.js","components/FriendList/FriendList.jsx","components/TransactionHistory/Transactions.styled.js","components/TransactionHistory/TransactionHistory.jsx","components/App.js","index.js"],"names":["Section","styled","section","Container","div","Description","ImageWrapper","ProfileImage","img","NameTitle","p","TagText","LocationText","List","ul","ListItem","li","Label","span","Quantity","Profile","name","tag","location","avatar","stats","src","alt","width","followers","views","likes","Wrapper","MainTitle","h2","StatsList","StatsItem","Statistic","title","map","id","label","percentage","Item","Status","props","isOnline","Name","FriendList","friends","friend","href","target","rel","Table","table","Thead","thead","Trow","tr","TrowList","Cell","td","TransactionsHistory","items","item","type","amount","currency","user","Background","App","statisticalData","friendsList","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e568f623.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst Section = styled.section`\n  padding: 20px;\n`;\n\nconst Container = styled.div`\n  padding-top: 15px;\n  margin: 0 auto;\n  width: 300px;\n  box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);\n`;\n\nconst Description = styled.div`\n  margin: 0 auto;\n  text-align: center;\n`;\n\nconst ImageWrapper = styled.div`\n  margin: 0 auto;\n  overflow: hidden;\n  width: 200px;\n  height: 200px;\n  border-radius: 50%;\n`;\nconst ProfileImage = styled.img`\n  margin: 0 auto;\n  border-style: none;\n  display: block;\n  max-width: 100%;\n`;\nconst NameTitle = styled.p`\n  margin: 0 0 15px 0;\n  font-size: 35px;\n`;\nconst TagText = styled.p`\n  font-size: 25px;\n  margin-bottom: 15px;\n`;\n\nconst LocationText = styled.p`\n  font-style: oblique;\n`;\n\nconst List = styled.ul`\n  color: #fff;\n  padding: 0;\n  margin: 0;\n  list-style: none;\n  display: flex;\n`;\n\nconst ListItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  padding: 15px;\n  background-color: #a3a3a3;\n  width: 100px;\n  height: 50px;\n  cursor: pointer;\n\n  transition: transform 0.2s linear;\n\n  :hover {\n    transform: scale(1.1);\n  }\n\n  :not(:last-child) {\n    margin-right: 2px;\n  }\n`;\n\nconst Label = styled.span`\n  display: block;\n  margin-bottom: 5px;\n`;\n\nconst Quantity = styled.span``;\n\nexport {\n  Section,\n  Container,\n  Description,\n  ImageWrapper,\n  ProfileImage,\n  NameTitle,\n  TagText,\n  LocationText,\n  List,\n  ListItem,\n  Label,\n  Quantity,\n};\n","import React from \"react\";\nimport propTypes from \"prop-types\";\nimport {\n  Section,\n  Container,\n  Description,\n  ImageWrapper,\n  ProfileImage,\n  NameTitle,\n  TagText,\n  LocationText,\n  List,\n  ListItem,\n  Label,\n  Quantity,\n} from \"./Profile.styled\";\n\nexport default function Profile({ name, tag, location, avatar, stats }) {\n  return (\n    <>\n      <Section>\n        <Container>\n          <Description>\n            <ImageWrapper>\n              <ProfileImage src={avatar} alt={name} width=\"200\" />\n            </ImageWrapper>\n\n            <NameTitle>{name}</NameTitle>\n            <LocationText>{location}</LocationText>\n            <TagText>@{tag}</TagText>\n          </Description>\n\n          <List>\n            <ListItem>\n              <Label>Followers:</Label>\n              <Quantity>{stats.followers}</Quantity>\n            </ListItem>\n            <ListItem>\n              <Label>Views:</Label>\n              <Quantity>{stats.views}</Quantity>\n            </ListItem>\n            <ListItem>\n              <Label>Likes:</Label>\n              <Quantity>{stats.likes}</Quantity>\n            </ListItem>\n          </List>\n        </Container>\n      </Section>\n    </>\n  );\n}\n\nProfile.propTypes = {\n  name: propTypes.string.isRequired,\n  tag: propTypes.string.isRequired,\n  location: propTypes.string.isRequired,\n  avatar: propTypes.string.isRequired,\n  stats: propTypes.objectOf(propTypes.number.isRequired),\n};\n","import styled from \"styled-components\";\n\nconst Section = styled.section`\n  padding: 20px;\n`;\n\nconst Wrapper = styled.div`\n  width: 500px;\n  margin: 0 auto;\n  padding: 15px 0 0 0;\n  box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);\n`;\n\nconst MainTitle = styled.h2`\n  text-transform: uppercase;\n  text-align: center;\n  margin-bottom: 10px;\n`;\n\nconst StatsList = styled.ul`\n  list-style: none;\n  display: flex;\n  justify-content: center;\n`;\nconst StatsItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100px;\n  height: 100px;\n\n  transition: transform 0.2s linear;\n\n  :hover {\n    transform: scale(1.1);\n  }\n\n  :nth-child(1) {\n    background-color: #4cc6f7;\n  }\n  :nth-child(2) {\n    background-color: #a43cf3;\n  }\n  :nth-child(3) {\n    background-color: #e64c66;\n  }\n  :nth-child(4) {\n    background-color: #20b8c5;\n  }\n  :nth-child(5) {\n    background-color: #fde767;\n  }\n`;\n\nconst Label = styled.span`\n  font-size: 24px;\n  margin-bottom: 5px;\n`;\n\nexport { Section, Wrapper, MainTitle, StatsList, StatsItem, Label };\n","import React from \"react\";\nimport propTypes from \"prop-types\";\nimport {\n  Section,\n  Wrapper,\n  MainTitle,\n  StatsList,\n  StatsItem,\n  Label,\n} from \"./Statistics.styled\";\n\nexport default function Statistic({ title, stats }) {\n  return (\n    <Section>\n      <Wrapper>\n        <MainTitle>{title}</MainTitle>\n        <StatsList>\n          {stats.map(({ id, label, percentage }) => (\n            <StatsItem key={id}>\n              <Label>{label}</Label>\n              <span>{percentage}%</span>\n            </StatsItem>\n          ))}\n        </StatsList>\n      </Wrapper>\n    </Section>\n  );\n}\n\nStatistic.propTypes = {\n  title: propTypes.string.isRequired,\n  stats: propTypes.arrayOf(\n    propTypes.exact({\n      id: propTypes.string.isRequired,\n      label: propTypes.string.isRequired,\n      percentage: propTypes.number.isRequired,\n    })\n  ),\n};\n","import styled from \"styled-components\";\n\nconst Section = styled.section`\n  padding: 20px;\n`;\n\nconst List = styled.ul`\n  width: 500px;\n  margin: 0 auto;\n`;\n\nconst Item = styled.li`\n  display: flex;\n  align-items: center;\n  padding: 10px;\n  background: linear-gradient(\n    180deg,\n    rgba(255, 255, 255, 0) 2%,\n    rgba(203, 255, 183, 1) 64%\n  );\n  box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);\n  transition: transform 0.2s linear;\n  border-radius: 15px;\n\n  :not(:last-child) {\n    margin-bottom: 5px;\n  }\n\n  :hover {\n    transform: translate(0, -10px) scale(1.03);\n  }\n`;\n\nconst Status = styled.span`\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  background-color: ${(props) => (props.isOnline ? \"green\" : \"red\")};\n  margin-right: 20px;\n  border: 2px solid #fff;\n  box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);\n`;\n\nconst ImageWrapper = styled.div`\n  border-radius: 10px;\n  width: 100px;\n  height: 100px;\n  margin-right: 30px;\n  overflow: hidden;\n`;\n\nconst Name = styled.p`\n  font-size: 35px;\n`;\n\nexport { Section, List, Item, Status, ImageWrapper, Name };\n","import React from \"react\";\n\nimport propTypes from \"prop-types\";\nimport {\n  Section,\n  List,\n  Item,\n  Status,\n  ImageWrapper,\n  Name,\n} from \"./FriendList.styled\";\n\nexport default function FriendList({ friends }) {\n  return (\n    <Section>\n      <List>\n        {friends.map((friend) => (\n          <Item key={friend.id}>\n            <Status isOnline={friend.isOnline}></Status>\n            <ImageWrapper>\n              <a href={friend.avatar} target=\"_blank\" rel=\"noreferrer\">\n                <img src={friend.avatar} width=\"100\" alt={friend.name} />\n              </a>\n            </ImageWrapper>\n            <Name>{friend.name}</Name>\n          </Item>\n        ))}\n      </List>\n    </Section>\n  );\n}\n\nFriendList.propTypes = {\n  friends: propTypes.arrayOf(\n    propTypes.exact({\n      avatar: propTypes.string.isRequired,\n      name: propTypes.string.isRequired,\n      isOnline: propTypes.bool.isRequired,\n      id: propTypes.number.isRequired,\n    })\n  ),\n};\n","import styled from \"styled-components\";\n\nconst Section = styled.section`\n  padding: 15px;\n`;\n\nconst Table = styled.table`\n  margin: 0 auto;\n  width: 500px;\n  box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);\n`;\nconst Thead = styled.thead`\n  background-color: #4df3ff;\n  height: 40px;\n`;\n\nconst Trow = styled.tr`\n  height: 40px;\n`;\n\nconst TrowList = styled.tr`\n  background-color: #fff;\n  :not(:nth-child(odd)) {\n    background-color: #cacaca;\n  }\n`;\nconst Cell = styled.td`\n  padding: 5px;\n`;\n\nexport { Section, Table, Thead, Trow, TrowList, Cell };\n","import React from \"react\";\nimport propTypes from \"prop-types\";\nimport {\n  Section,\n  Table,\n  Thead,\n  Trow,\n  TrowList,\n  Cell,\n} from \"./Transactions.styled\";\n\nexport default function TransactionsHistory({ items }) {\n  return (\n    <Section>\n      <Table>\n        <Thead>\n          <Trow>\n            <th>Type</th>\n            <th>Amount</th>\n            <th>Currency</th>\n          </Trow>\n        </Thead>\n\n        <tbody>\n          {items.map((item) => (\n            <TrowList key={item.id}>\n              <Cell>{item.type}</Cell>\n              <Cell>{item.amount}</Cell>\n              <Cell>{item.currency}</Cell>\n            </TrowList>\n          ))}\n        </tbody>\n      </Table>\n    </Section>\n  );\n}\n\nTransactionsHistory.propTypes = {\n  items: propTypes.arrayOf(\n    propTypes.exact({\n      id: propTypes.string.isRequired,\n      type: propTypes.string.isRequired,\n      amount: propTypes.string.isRequired,\n      currency: propTypes.string.isRequired,\n    })\n  ),\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Profile from \"./Profile/Profile\";\nimport Statistics from \"./Statistics/Statistics\";\nimport FriendList from \"./FriendList/FriendList\";\nimport TransactionHistory from \"./TransactionHistory/TransactionHistory\";\n\nimport user from \"../data/user.json\";\nimport statisticalData from \"../data/statistical-data.json\";\nimport friendsList from \"../data/friends.json\";\nimport transactions from \"../data/transactions.json\";\n\nconst { name, tag, location, avatar, stats } = user;\n\nconst Background = styled.div`\n  background-image: url(\"https://www.toptal.com/designers/subtlepatterns/patterns/webb.png\");\n`;\n\nexport default function App() {\n  return (\n    <Background>\n      <Profile\n        avatar={avatar}\n        name={name}\n        location={location}\n        stats={stats}\n        tag={tag}\n      />\n\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n\n      <FriendList friends={friendsList} />\n\n      <TransactionHistory items={transactions} />\n    </Background>\n  );\n}\n","import \"./styles/normalize.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}